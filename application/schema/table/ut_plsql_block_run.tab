create table UT_PLSQL_BLOCK_RUN
(
  id              NUMBER not null,
  run_id          NUMBER,
  plsql_block_id  NUMBER,
  test_case_id    NUMBER,
  test_script_id  NUMBER,
  run_order       NUMBER,
  start_time      TIMESTAMP(6) WITH TIME ZONE,
  end_time        TIMESTAMP(6) WITH TIME ZONE,
  expected_result VARCHAR2(10),
  result          VARCHAR2(10),
  input_xml       XMLTYPE,
  output_xml      XMLTYPE,
  error_code      INTEGER,
  error_message   VARCHAR2(4000)
)
;
comment on table UT_PLSQL_BLOCK_RUN
  is 'PLSQL Block run log';
comment on column UT_PLSQL_BLOCK_RUN.id
  is 'PLSQL block run log surrogate identifier';
comment on column UT_PLSQL_BLOCK_RUN.plsql_block_id
  is 'PLSQL block identifier';
comment on column UT_PLSQL_BLOCK_RUN.test_case_id
  is 'Test case identifier';
comment on column UT_PLSQL_BLOCK_RUN.test_script_id
  is 'Test script identifier';
comment on column UT_PLSQL_BLOCK_RUN.run_order
  is 'Run order';
comment on column UT_PLSQL_BLOCK_RUN.start_time
  is 'Start time';
comment on column UT_PLSQL_BLOCK_RUN.end_time
  is 'End time';
comment on column UT_PLSQL_BLOCK_RUN.expected_result
  is 'Expected result (''OK'',''ERROR'')';
comment on column UT_PLSQL_BLOCK_RUN.result
  is 'Returned result (''OK'',''ERROR'')';
comment on column UT_PLSQL_BLOCK_RUN.input_xml
  is 'Input arguments of PLSQL block';
comment on column UT_PLSQL_BLOCK_RUN.output_xml
  is 'Output arguments of PLSQL block';
comment on column UT_PLSQL_BLOCK_RUN.error_code
  is 'Error code';
comment on column UT_PLSQL_BLOCK_RUN.error_message
  is 'Error message';
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_PK primary key (ID);
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_BLK_FK foreign key (PLSQL_BLOCK_ID)
  references UT_PLSQL_BLOCK (ID);
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_CAS_FK foreign key (TEST_CASE_ID)
  references UT_TEST_CASE (ID);
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_SCR_FK foreign key (TEST_SCRIPT_ID)
  references UT_TEST_SCRIPT (ID);
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_CHK01
  check ((EXPECTED_RESULT in ('OK','ERROR')));
alter table UT_PLSQL_BLOCK_RUN
  add constraint UT_PLSQL_BLOCK_RUN_CHK02
  check ((RESULT in ('OK','ERROR')));

